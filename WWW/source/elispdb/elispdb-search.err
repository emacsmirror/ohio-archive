
Python version 1.0, VM version Intel x86 on 02 FEB 01 02:33:03 pm.
Compiling: /usr/src/cvs/elispdb/elispdb-search.lisp 24 JAN 01 06:39:04 pm

Byte Compiling Top-Level Form: 
Byte Compiling Top-Level Form: 
Byte Compiling Top-Level Form: 
Converted OPEN-DATABASES.
Compiling DEFUN OPEN-DATABASES: 
Converted CLOSE-DATABASES.
Compiling DEFUN CLOSE-DATABASES: 
Converted FORMAT-HTML-ESCAPED.
Compiling DEFUN FORMAT-HTML-ESCAPED: 
Converted PRINC-TO-STRING-HTML-ESCAPED.
Compiling DEFUN PRINC-TO-STRING-HTML-ESCAPED: 
Converted FORMAT-ARGS-HTML-ESCAPED.
Compiling DEFUN FORMAT-ARGS-HTML-ESCAPED: 
Converted MAP-HASH-SORTED.
Compiling DEFUN MAP-HASH-SORTED: 

File: /usr/src/cvs/elispdb/elispdb-search.lisp

In: DEFUN MAP-HASH-SORTED
  (+ START RANGE)
Note: Forced to do GENERIC-+ (cost 10).
      Unable to do inline fixnum arithmetic (cost 2) because:
      The first argument is a INTEGER, not a FIXNUM.
      The second argument is a INTEGER, not a FIXNUM.
      The result is a INTEGER, not a FIXNUM.
      Unable to do inline (signed-byte 32) arithmetic (cost 5) because:
      The first argument is a INTEGER, not a (SIGNED-BYTE 32).
      The second argument is a INTEGER, not a (SIGNED-BYTE 32).
      The result is a INTEGER, not a (SIGNED-BYTE 32).
      etc.

  (MIN COUNT (+ START RANGE))
--> LET LET IF 
==>
  (< #:OO-4 #:OO-5)
Note: Forced to do GENERIC-< (cost 10).
      Unable to do inline fixnum comparison (cost 4) because:
      The second argument is a INTEGER, not a FIXNUM.

  (> RANGE 0)
Note: Forced to do GENERIC-> (cost 10).
      Unable to do inline fixnum comparison (cost 3) because:
      The first argument is a INTEGER, not a FIXNUM.
      Unable to do inline fixnum comparison (cost 4) because:
      The first argument is a INTEGER, not a FIXNUM.
      etc.

  (>= I RANGE)
--> IF 
==>
  (< I RANGE)
Note: Forced to do GENERIC-< (cost 10).
      Unable to do inline fixnum comparison (cost 4) because:
      The first argument is a INTEGER, not a FIXNUM.
      The second argument is a INTEGER, not a FIXNUM.

  (INCF I)
--> LET* 
==>
  (+ I 1)
Note: Forced to do GENERIC-+ (cost 10).
      Unable to do inline fixnum arithmetic (cost 1) because:
      The first argument is a INTEGER, not a FIXNUM.
      The result is a INTEGER, not a FIXNUM.
      Unable to do inline fixnum arithmetic (cost 2) because:
      The first argument is a INTEGER, not a FIXNUM.
      The result is a INTEGER, not a FIXNUM.
      etc.

Converted MERGE-HASHES.
Compiling DEFUN MERGE-HASHES: 
Converted GET-SCORE-HASHES.
Compiling DEFUN GET-SCORE-HASHES: 
Converted GET-SCORE-HASH.
Compiling DEFUN GET-SCORE-HASH: 
Byte Compiling Top-Level Form: 
Converted WRITE-SEARCH-RESULTS.
Compiling DEFUN WRITE-SEARCH-RESULTS: 

File: /usr/src/cvs/elispdb/elispdb-search.lisp

In: DEFUN WRITE-SEARCH-RESULTS
  (FLET ((WRITE-RESULTS #
           #
           NIL))
    (LET (# #)
      (MULTIPLE-VALUE-BIND # # # # ...)))
Note: Variable DB defined but never used.

  (+ START *MAXIMUM-SEARCH-RESULTS*)
Note: Unable to optimize due to type uncertainty:
      The second argument is a NUMBER, not a FLOAT.
Note: Unable to optimize due to type uncertainty:
      The second argument is a NUMBER, not a (COMPLEX SINGLE-FLOAT).
Note: Unable to optimize due to type uncertainty:
      The second argument is a NUMBER, not a (COMPLEX DOUBLE-FLOAT).

  (MIN END MATCH-COUNT)
--> LET LET IF 
==>
  (< #:OO-5 #:OO-6)
Note: Unable to optimize due to type uncertainty:
      The first argument is a REAL, not a FLOAT.

  (> (CDR A) (CDR B))
Note: Unable to optimize due to type uncertainty:
      The first argument is a REAL, not a SINGLE-FLOAT.
      The second argument is a REAL, not a DOUBLE-FLOAT.
Note: Unable to optimize due to type uncertainty:
      The first argument is a REAL, not a DOUBLE-FLOAT.
      The second argument is a REAL, not a SINGLE-FLOAT.
Note: Unable to optimize due to type uncertainty:
      The first argument is a REAL, not a FLOAT.
      The second argument is a REAL, not a RATIONAL.

  (+ START *MAXIMUM-SEARCH-RESULTS*)
Note: Forced to do GENERIC-+ (cost 10).
      Unable to do inline fixnum arithmetic (cost 2) because:
      The first argument is a INTEGER, not a FIXNUM.
      The second argument is a NUMBER, not a FIXNUM.
      The result is a NUMBER, not a FIXNUM.
      Unable to do inline (signed-byte 32) arithmetic (cost 5) because:
      The first argument is a INTEGER, not a (SIGNED-BYTE 32).
      The second argument is a NUMBER, not a (SIGNED-BYTE 32).
      The result is a NUMBER, not a (SIGNED-BYTE 32).
      etc.

  (MIN END MATCH-COUNT)
--> LET LET IF 
==>
  (< #:OO-5 #:OO-6)
Note: Forced to do GENERIC-< (cost 10).
      Unable to do inline fixnum comparison (cost 4) because:
      The first argument is a REAL, not a FIXNUM.

  (> (CDR A) (CDR B))
Note: Forced to do GENERIC-> (cost 10).
      Unable to do inline float comparison (cost 3) because:
      The first argument is a REAL, not a DOUBLE-FLOAT.
      The second argument is a REAL, not a DOUBLE-FLOAT.
      Unable to do inline float comparison (cost 3) because:
      The first argument is a REAL, not a SINGLE-FLOAT.
      The second argument is a REAL, not a SINGLE-FLOAT.
      etc.

Converted SEARCH-HANDLER.
Compiling DEFUN SEARCH-HANDLER: 

File: /usr/src/cvs/elispdb/elispdb-search.lisp

In: DEFUN SEARCH-HANDLER
  (DEFUN SEARCH-HANDLER (REQUEST REST-OF-URL)
    (HANDLER-CASE
     (LET #
       #)
     (ERROR # # # #)))
Note: Variable REST-OF-URL defined but never used.

Converted CANONICALIZE-SEARCH.
Compiling DEFUN CANONICALIZE-SEARCH: 
Converted SEARCH-OUTPUT-TO-TMPFILE.
Compiling DEFUN SEARCH-OUTPUT-TO-TMPFILE: 
Byte Compiling Top-Level Form: 

Compilation unit finished.
  17 notes


src:cvs/elispdb/elispdb-search.x86f written.
Compilation finished in 0:00:02.
