From research!TEMS.DECNET!ELSTON Wed Oct 13 14:06:16 1993
Date: Wed, 13 Oct 93 10:12:14 PDT
From: ELSTON%TEMS.DECNET@EDWARDS-TEMS.AF.MIL (Mark Elston)
Subject: Re: Installing AUC-TeX for GNU Emacs 18.58 under VMS
To: "BOOT2::PONY%""auc-tex@iesd.auc.dk"""@TEMS.DECNET



In answering my own question about getting AUC-TeX to work under VMS I
got a helpful response from Kobayashi Shinji regarding the use of
slashes in the filenames.  For everyone's information I have been able
to get AUC-TeX working (apparently) and here are the changes that I
needed to make to get it up and working.  BTW these changes are
necessary due to the nature of VMS's file system.  Devices are specified
by a name followed by a colon, directories are specified by the directory
names separated by periods, "." and all of them surrounded by brackets, "[]".
File names are appended to the closing bracket.

Thus the file "LOGIN.COM" on device DISK1 in the USER directory and
the ELSTON subdirectory would be specified DISK1:[USER.ELSTON]LOGIN.COM .

This is a simplified explanation and does not take into account logical
names, relative paths, etc, but suffices for my purpose.

This did not fit in well with how AUC-TeX specified file names and
directories.

The changes I made were as follows:

------------------------------------
In the file TEX-SITE.EL:
;;;(defvar TeX-lisp-directory "/usr/local/lib/emacs/site-lisp/auctex/"
;;;  "*The directory where the AUC TeX lisp files are located.
;;;
;;;The directory name *must* end with a slash.")
;;;

(defvar TeX-lisp-directory "EMACS_LIBRARY:[AUCTEX."
  "*The directory where the AUC TeX lisp files are located.")

;;;(defvar TeX-macro-global
;;;  '("/usr/local/lib/tex/inputs/" "/usr/local/lib/tex/generate/")
;;;  "*Directories containing the sites TeX macro files and style files.
;;;
;;;The directory names *must* end with a slash.")

(defvar TeX-macro-global
  '("TEX_ROOT:[INPUTS.")
  "*Directories containing the sites TeX macro files and style files.")

------------------------------------
In the file TEX-INIT.EL:
;;; @@ Style Paths

(defvar TeX-format-directory (concat TeX-lisp-directory "format]")
  "*Directory containing information about TeX format packages.
Must end with a slash.")

(defvar TeX-auto-global (concat TeX-lisp-directory "auto]")
  "*Directory containing automatically generated information.
Must end with a slash.

For storing automatic extracted information about the TeX macros
shared by all users of a site.")  

(defvar TeX-style-global (concat TeX-lisp-directory "style]")
  "*Directory containing hand generated TeX information.
Must end with a slash.

These correspond to TeX macros shared by all users of a site.")

(defvar TeX-auto-local "auto]"
  "*Directory containing automatically generated TeX information.
Must end with a slash.

This correspond to TeX macros found in the current directory.")

(defvar TeX-style-local "style]"
  "*Directory containing hand generated TeX information.
Must end with a slash.

These correspond to TeX macros found in the current directory.")

(defvar TeX-macro-private (list (expand-file-name "TEX_ROOT:[INPUT.LOCAL."))
  "*Directories where you store your personal TeX macros.
Each must end with a slash.")

------------------------------------
Also in file TEX-INIT.EL in the TeX-load-style function note below the 
two lines marked and notice that the slashes have been replaced with
']'.

(defun TeX-load-style (style)
  "Search for and load each definition for style in TeX-style-path."
  (if (assoc style TeX-style-hook-list)
      ;; We already found it
      ()
    ;; Insert empty list to mark the fact that we have searched.
    (setq TeX-style-hook-list (cons (list style) TeX-style-hook-list))
    ;; Now check each element of the path
    (mapcar (function
             (lambda (name)
               (let* ((name (if (string-match "]$" name)       <------------|
                                name
                              (concat name "]")))              <------------|
                      (el (concat name style ".el"))
                      (elc (concat name style ".elc")))
                 (cond ((and (null TeX-byte-compile)
			     (file-readable-p el))
			(load-file el))
		       ((file-newer-than-file-p el elc)
			(if (not (file-writable-p elc))
			    (load-file el)
			  (byte-compile-file el)
			  (load-file elc)))
		       ((file-readable-p elc)
			(load-file elc))
		       ((file-readable-p el)
			(load-file el))))))
            TeX-style-path)))

------------------------------------


That was what I had to do to get AUC-TeX running under VMS.  I am not
sure whether this accomplishes all that is necessary but it seems to
have done what was necessary to get AUC-TeX out of Fundamental mode.  
Thanks for the help I recieved and I hope this helps someone else.

Mark.
------------------------------------
Mark Elston
elston@edwards-tems.af.mil

