Info file: lookup.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `lookup.texi'
using `texinfmt.el' version 2.38 of 3 July 1998.



INFO-DIR-SECTION The Emacs editor and associated tools
START-INFO-DIR-ENTRY
* Lookup: (lookup).             Lookup, a Search Interface.
END-INFO-DIR-ENTRY


This file documents Lookup, a search interface.

Copyright (C) 1997,1998,1999 Keisuke Nishida

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation
approved by the Free Software Foundation.





File: lookup.info, Node: Customization, Next: Dictionary Types, Prev: How To Lookup, Up: Top

自分好みに調節する
******************

この章では、Lookup を個人の好みに応じて調節するための方法について説明し
ます。また、辞書毎の一般的なカスタマズをまとめて設定ファイル集として配布
する方法についても説明します。

[ この章はまだ整備途中です ]

* Menu:

* Customize General::           一般的なカスタマイズ
* Customize Option::            辞書とエージェントのカスタマイズ
* Customize Contents::          エントリ本文のカスタマイズ
* Supplement Package::          補助パッケージを作る
* Customize Example::           詳細な設定例



File: lookup.info, Node: Customize General, Next: Customize Option, Prev: Customization, Up: Customization

一般的なカスタマイズ
====================

Lookup の全般に関わるカスタマイズ変数の多くは、Custom パッケージを利用す
ることで変更可能です。Lookup を起動後 `M-x customize-group RET lookup
RET' とすれば、設定出来る変数の一覧を見ることが出来ます。

* Menu:

* Customize Variables::         主なカスタマイズ変数
* Customize Face::              文字装飾のカスタマイズ



File: lookup.info, Node: Customize Variables, Next: Customize Face, Prev: Customize General, Up: Customize General

主なカスタマイズ変数
--------------------

`lookup-default-method'
     デフォルトの検索方式を指定する。

`lookup-frame-alist'
     フレームのパラメータのリスト。

`lookup-fill-column'
     エントリ内容を fill するときの桁数。

`lookup-window-height'
     Entry バッファ等のウィンドウの高さ。

`lookup-save-configuration'
     non-nil を指定すると、Lookup を抜けたときに画面の状態が検索開始時の
     ものに戻される。

`lookup-use-bitmap'
     non-nil に指定すると、bitmap-mule を利用した外字表示を行なうように
     なります。bitmap-mule が既にロードされていれば自動的に `t' になりま
     す。*Note Setup Gaiji:: を参照して下さい。

`lookup-use-kakasi'
     non-nil に指定すると、KAKASI を用いて日本語の検索語の切り出しを行な
     うようになります。*Note Search Commands:: を参照して下さい。

`lookup-enable-gaiji'
     nil に指定すると、外字の表示を行なわなくなります。*Note Setup
     Gaiji:: を参照して下さい。

`lookup-max-hits'
`lookup-max-text'
     表示するエントリの上限数、及びエントリ本文の上限サイズを定めます。
     これらは現在 ndeb でのみ有効です。

`lookup-cite-style'
`lookup-cite-header'
`lookup-cite-header'
     エントリ本文を引用するときのスタイル、ヘッダ、プレフィクスを設定す
     る。*Note Cite Contents:: を参照。



File: lookup.info, Node: Customize Face, Prev: Customize Variables, Up: Customize General

文字装飾のカスタマイズ
----------------------

Lookup ではフェイス(文字装飾)の設定に Custom パッケージの `defface' を用
いています。これをカスタマイズするには、`M-x customize-group RET
lookup-faces RET' などとして設定を行なって下さい。

Mule を利用しているなど、Custom がインストールされてない場合には、Lookup 
の初期化ファイル(`~/.lookup')で設定を行なう必要があります。これは次のよ
うにして行ないます。

     ;; lookup-heading-1-face の設定
     (set-face-bold-p 'lookup-heading-1-face t)
     (set-face-foreground 'lookup-heading-1-face "SlateBlue")

設定出来るフェイスは次の通りです。

`lookup-heading-1-face'
     本文の最初の見出し(通常、一行目)に付けられるフェイス。
`lookup-heading-2-face'
     本文が構造を持つ場合、二番目の見出しに付けられるフェイス。
`lookup-heading-3-face'
     本文が構造を持つ場合、三番目の見出しに付けられるフェイス。
`lookup-heading-4-face'
     本文が構造を持つ場合、四番目の見出しに付けられるフェイス。
`lookup-heading-5-face'
     本文が構造を持つ場合、五番目の見出しに付けられるフェイス。
`lookup-heading-low-face'
     本文が構造を持つ場合、あまり重要でない部分に付けられるフェイス。
`lookup-reference-face'
     本文のリンク部分に用いられるフェイス。
`lookup-refered-face'
     本文の参照済みリンクに用いられるフェイス。

設定には次のような関数が利用出来ます。

`set-face-foreground'
     フェイスの文字色を指定する。
`set-face-background'
     フェイスの背景色を指定する。
`set-face-bold-p'
     フェイスを太字にする。
`set-face-italic-p'
     フェイスを斜体にする。
`set-face-underline-p'
     フェイスを下線付きにする。



File: lookup.info, Node: Customize Option, Next: Customize Contents, Prev: Customize General, Up: Customization

辞書とエージェントのカスタマイズ
================================

* Menu:

* Agent Options::               エージェント・オプション一覧
* Dictionary Options::          辞書オプション一覧



File: lookup.info, Node: Agent Options, Next: Dictionary Options, Prev: Customize Option, Up: Customize Option

エージェント・オプション一覧
----------------------------

検索エージェントにオプションを設定することで、その振舞いのカスタマイズが
可能です。(*Note Setup Option::)

オプションには全てのエージェントで共通に利用出来るものと、エージェント毎
に異なるものとがあります。検索エージェント別のオプションは、それぞれのエー
ジェントについての説明を参照して下さい。共通オプションとしては、次のもの
が利用出来ます。

`:alias'
     エージェントに別名を与える。エージェントID は普通`CLASS+LOCATION' 
     として与えられるが(*Note Quick Startup::)、このオプションにより 
     LOCATION の部分を置き換えられる。当然ながら、これは 
     `lookup-search-agents' で設定しなければならない。次のように用いられ
     る。

          (setq lookup-search-agents
                '((ndic "/usr/lib/dict" :alias "dict")))
          (lookup-use-package "ndic+dict" "dict-package")
`:title'
     検索エージェントにタイトルを設定する。これは現在、用いられていない。
`:enable'
     有効とする辞書名のリスト。(*Note Setup Restriction::)
`:disable'
     無効とする辞書名のリスト。(*Note Setup Restriction::)
`:select'
     選択する辞書名のリスト。(*Note Setup Restriction::)
`:unselect'
     未選択にする辞書名のリスト。(*Note Setup Restriction::)



File: lookup.info, Node: Dictionary Options, Prev: Agent Options, Up: Customize Option

辞書オプション一覧
------------------

辞書は、オプションを設定することによりカスタマイズが可能です。(*Note
Setup Option::)

次のオプションが利用出来ます。

`:title'
     辞書のタイトルを指定する。
`:stemmer'
     stemming 関数を指定する。これは複数形など単語の語尾を取り除いて元の
     単語を推測するための関数で、文字列を受け取り候補となる文字列のリス
     トを返さねばならない。次のように設定する。

          (lookup-set-dictionary-option "agent:DICT" ':stemmer 'stem-english)
`:hiragana'
     漢字ひらがな拡張検索を行うように指定する。:expander オプション及び:
     expand-filter オプションを上書きする。*Note Kanji-Kana Expansion::.
`:expander'
     expander 関数を指定する。これは検索語を適当な他の検索語に置き換える
     ための関数で、文字列を受取り、文字列のリストを返さなければらならな
     い。次のように設定する。

          (lookup-set-dictionary-option "agent:DICT" ':expander 'lookup-kanji-get-readings)

     :hiragana オプションと同時に指定することはできない。*Note Universal
     Query Expansion::.
`:expand-filter'
     expand-filter 関数を指定する。expander 関数によって検索語が拡張され
     ると、検索結果に多くの無駄なエントリが含まれるようになる。この関数
     は、そのようなエントリを元々の検索語を用いてフィルタリングするため
     の関数である。次のように設定する。

          (lookup-set-dictionary-option "agent:DICT" ':expand-filter 'lookup-kanji-filter)

     :hiragana オプションと同時に指定することはできない。*Note Universal
     Query Expansion::.
`:arranges'
     arrange 関数のリスト。(*Note Format Contents::)
`:adjusts'
     adjust 関数のリスト。(*Note Format Contents::)
`:gaiji-table'
     外字の置き換えテーブル。(*Note Gaiji Table::)
`:cite-style'
`:cite-header'
`:cite-prefix'
     それぞれ、`lookup-cite-style', `lookup-cite-header',
     `lookup-cite-prefix' の代わりに優先して用いられる。(*Note Cite
     Contents::)

この内、`:title' と `:gaiji-table' を除く全てのオプションは、エージェン
ト・オプションとして設定することも可能です。

エージェントによっては、これ以外にも特別な辞書オプションが利用出来る場合
があります。それぞれのエージェントの説明を参照して下さい。



File: lookup.info, Node: Customize Contents, Next: Supplement Package, Prev: Customize Option, Up: Customization

エントリ本文のカスタマイズ
==========================

* Menu:

* Reference Pattern::           リファレンスの設定
* Gaiji Table::                 外字置き換えの設定
* Format Contents::             テキストの整形



File: lookup.info, Node: Reference Pattern, Next: Gaiji Table, Prev: Customize Contents, Up: Customize Contents

リファレンスの設定
------------------

リファレンスの書式はしばしば辞書によって異なるので、Lookup のデフォルト
の設定だけではどうしても対応し切れません。Entry バッファで `t' を押すと、
本文整形前のオリジナルの内容を見ることが出来るので、その内容を確認してみ
て下さい。

もしデフォルトで生成されるリンクに不満がある場合、辞書オプション
`:reference-pattern' によりカスタマイズすることが可能です。設定すべき値
は次の通りです。

     (REGEXP LINK HEADING CODE)

REGEXP には、本文のリファレンス部分にマッチする正規表現を指定します。例
えば、リファレンスが次のようなパターンをしているとわかっている場合、

     `<gaiji:za123>heading<a456:789>' REGEXP は次のように出来るでしょう。 
(1)

     "<gaiji:za123>[^<\n]+<[0-9a-f:]+>"

LINK, HEADING, CODE にはそれぞれ、リンクとなる文字列、リファレンスの見出
し語、及びそのコード番号を指定します。今の場合、リンクは 
`<gaiji:za123>heading'、見出し語は `heading'、コード番号は `a456:789' と
すればよいでしょう。これには REGEXP のマッチ内容を利用して、次のように設
定することが出来ます。

     ("\\(<gaiji:za123>\\([^<\n]+\\)\\)<\\([0-9a-f:]+\\)>"
      (match-string 1) (match-string 2) (match-string 3))

このように `link', HEADING, CODE には文字列を返す任意の式を用いることが
可能ですが、上のように `match-string' でマッチ内容を単純に取り出すだけの
場合、特別に省略して番号を指定するだけでよいようになっています。

     ("\\(<gaiji:za123>\\([^<\n]+\\)\\)<\\([0-9a-f:]+\\)>" 1 2 3)

また、外字置き換えは別のステップで行なわれるため、この時点ではどうこうす
る必要はありません。見出し語に外字が含まれる場合にも、それをそのまま返す
ように設定して下さい。典型的には次のようなパターンをよく見ます。 (2)


     ("\\(→\\(\\([^<\n]\\|<gaiji:[^>]>\\)+\\)\\)<\\([0-9a-f:]+\\)>" 1 2 4)

自分の辞書に合わせた適切なパターンを作られた方は、メーリングリストにでも
情報を頂けますと幸いです。


--------- Footnotes ---------

(1)  XEmacs でならもっと単純に
`"<gaiji:za123>.+?<[0-9a-f:]+>"' とすることが出来ます。

(2) XEmacs でならやはり単純に`("\\(→
\\(.+?\\)\\)<\\([0-9a-f:]+\\)>" 1 2 3)' で OK です。


File: lookup.info, Node: Gaiji Table, Next: Format Contents, Prev: Reference Pattern, Up: Customize Contents

外字置き換えの設定
------------------

辞書オプション `:gaiji-table' により、辞書の外字の置き換えテーブルを設定
することが出来ます。

外字置き換えとは、外字表示の際に辞書に用意されている外字を用いることをせ
ずに、あらかじめ定義しておいた設定に従ってそれの置換文字列を利用すること
を言います。このための変換表を "外字テーブル" と呼び、関数
`lookup-new-gaiji-table' により生成します。

これは次のような書式を取ります。

     (lookup-new-gaiji-table
      '((CODE1 GLYPH1 [ALTERNATE1])
        (CODE2 GLYPH2 [ALTERNATE2])
         ...))

CODE は辞書における外字コードで、これはエントリ本文の整形処理を OFF にす
ることで確認出来ます。GLYPH には文字列、または評価可能な式を指定し、その
値が外字の置換文字列として利用されます。ALTERNATE は省略可能で、外字の代
替文字列を指定します。これはGLYPH と違って、一般的に利用される文字セット
でなければなりません。

GLYPH と ALTERNATE との違いは、それが見た目を重視するか利便性を重視する
かにあります。GLYPH にはアクセント文字などを含む文字列を指定することで見
た目を良くすることが出来ますが、その場合、検索やコピーのための利便性が犠
牲になります。そのため、表示のためにはGLYPH を用い、利便性を重視する状況
では ALTERNATE を用いるという使い分けが行なわれます。



File: lookup.info, Node: Format Contents, Prev: Gaiji Table, Up: Customize Contents

テキストの整形
--------------

エントリ内容の整形処理は、二つのステップで行なわれます。一つは"arrange" 
と呼び、主に辞書から得られた内容に手を加えます。もう一つは"adjust" と呼
び、こちらは見た目の調節を主とします。二つの本質的な違いは、その結果が
キャッシュされるかどうかにあります。

内容が arrange された結果はキャッシュに残り、次回の表示からはそれに手を
加えられません。対して adjust は表示を行なう度に毎回実行されます。そのた
め fill-lines のような大掛かりな一度きりの修正は arrange で行ない、リファ
レンスの色を変えるような毎回チェックの必要なものは adjust で行なうのが向
いています。

辞書の arrange 関数と adjust 関数は、どちらもデフォルトの処理がエージェ
ントで定義されています。しかしそれらは不十分なことが多いため、辞書毎にオ
プションによってこれらを変更することが出来ます。

arrange 関数を設定するための辞書オプションは `:arranges'、adjust 関数は 
`:adjusts' です。これらにはそれぞれ関数のリストを設定します。

arrange 関数も adjust 関数も、呼び出されるタイミングが違うだけで、内部的
には同じものです。どちらも一つの引数を受け取り、その値は無視されます。引
数は entry データタイプのオブジェクトで、呼び出されたときの
current-buffer はエントリ内容の挿入された Content バッファ、そのポイント
はバッファの先頭になっています。

関数内では current-buffer を変更してはなりませんが、ポイントと
restriction は自由に変えても構いません。それらは次の関数呼び出しでまた元
に戻ります。ただし、最後の adjust 関数が実行するポイント移動には意味があ
ります。Content バッファは、最後のポイントが見えるように表示されます。従っ
て adjust 関数の最後には、バッファの先頭への移動だけを行なう関数を設けて
おくのが普通です。

これらの関数を書くには、ある程度 Lookup の内部構造についての知識が必要に
なるかもしれません。Lookup が用いるデータタイプについては、ファイル
`lookup-types.el' を参照して下さい。標準の arrange 関数、adjust 関数につ
いては、ファイル `lookup-vse.el' を参照して下さい。



File: lookup.info, Node: Supplement Package, Next: Customize Example, Prev: Customize Contents, Up: Customization

補助パッケージを作る
====================

前述の arrange 関数や外字置き換えテーブルなどは、個人の好みを越えて他人
のためにも有用な場合が多いので、それらの設定をまとめて補助パッケージを作
ることが出来ます。(*Note Setup Package::)

補助パッケージとは実際には、前述したエージェント・オプションや辞書オプショ
ンを設定しているだけのものですが、その設定には専用のやり方が用意されてい
ます。パッケージの書き方については、ファイル `lookup-package.el' の先頭
に記述があるので、そちらを参照して下さい。

パッケージをある程度自動的・対話的に生成するツールも以前はありましたが、
今では動いていません。書き直すことに興味のある方いらしましたら、メーリン
グリストの方まで連絡下さい。(*Note How To Get::)

もし市販の辞書用の補助パッケージを作られましたら、メーリングリストに連絡
下さい。Lookup のホームページに登録させて頂きます。



File: lookup.info, Node: Customize Example, Prev: Supplement Package, Up: Customization

詳細な設定例
============

[ この節はまだ整備途中です ]



File: lookup.info, Node: Dictionary Types, Next: Search Agents, Prev: Customization, Up: Top

辞書フォーマット一覧
********************

* Menu:

* Setup SDIC::                  SDIC フォーマット
* Setup dictd::                 dictd フォーマット
* Setup cookie::                cookie ファイル
* Setup CD-ROM::                各種 CD-ROM 辞書
* Setup NDTP::                  NDTP 辞書サーバ
* Setup DICT::                  DICT 辞書サーバ



File: lookup.info, Node: Setup SDIC, Next: Setup dictd, Prev: Dictionary Types, Up: Dictionary Types

SDIC フォーマット
=================

"SDIC フォーマット" とは、Emacs で使える簡易検索ソフト SDIC (1) で採用さ
れている行指向の辞書形式です。Lookup では ndic エージェントにより検索が
行なえます。(*Note ndic::)


SDIC フォーマットの特徴
-----------------------

   * 単一ファイル、一行一エントリの簡潔な構成。
   * grep 一つで高速な検索が可能。
   * いくつかのフリー辞書が入手可能。


SDIC フォーマットの概要
-----------------------

SDIC 辞書は `.sdic' を拡張子とする単一のファイルからなり、次のような内容
になっています。

     <H>Foo</H><K>foo</K>This is first entry.
     <H>Bar Baz</H><K>bar</K><K>baz</K>This is second entry.
     ...

`<H>' ... `</H>' となっている部分がエントリの見出し、`<K>' ... `</K>' と
なっている部分が検索に用いられるキーワード、最後の部分が説明内容です。検
索は次のようにして行なわれます。

`grep <K>word</K> dict.sdic'
     完全一致検索
`grep <K>word dict.sdic'
     前方一致検索
`grep word</K> dict.sdic'
     後方一致検索
`grep word dict.sdic'
     全文検索

より詳細な説明は、SDIC に附属の仕様書を参照して下さい。


SDIC 辞書の利用
---------------

辞書ファイルを適当なディレクトリに用意し、ndic エージェントを設定して下
さい。


--------- Footnotes ---------

(1)  `http://pine.kuee.kyoto-u.ac.jp/member/tsuchiya/sdic/'


File: lookup.info, Node: Setup dictd, Next: Setup cookie, Prev: Setup SDIC, Up: Dictionary Types

dictd フォーマット
==================

"dictd フォーマット" とは、DICT プロジェクト (1) で配布されている辞書サー
バ `dictd' で用いられている比較的単純な辞書形式です。Lookup では ndic 及
び ndict エージェントにより検索が行なえます。(*Note ndic::, *Note
ndict::)


dictd フォーマットの特徴
------------------------

   * インデックスファイルと本文ファイルが分離。
   * プレーンテキストによる辞書内容の記述。
   * いくつかのフリー辞書が入手可能。


dictd フォーマットの概要
------------------------

dictd 辞書は `.index' を拡張子とするインデックスファイルと、`.dict' を拡
張子とする本文ファイルからなり、それぞれ次のような内容になっています。

     `file.index'
     foo     A2      w
     bar     Bc      Ab
     ...

     `file.dict'
     foo

       Here is explanation of foo.

     bar

       Here is explanation of bar.

     ...

本文ファイルはこのように単なるプレーンテキストであり、インデックスファイ
ルの各行にそれぞれのエントリの情報が並べられます。順に、最初のコラムが見
出し語、二番目が本文の開始位置、三番目が本文の長さを表わします。各コラム
はタブで区切られ、二番目、三番目の値は base64 でエンコードされています。

検索時はまずインデックスファイルから目的の見出し語が見付け出され、そうし
て得られた情報から効率的に本文が取り出されます。

より詳細な説明は、`dictd' のマニュアルページを参照して下さい。


dictd 辞書の利用
----------------

dictd 辞書は、ndic 及び ndict エージェントから検索することが可能です。
ndict エージェントを用いる方がより高速な検索が可能ですが、サーバの設定が
必要なぶんいくらか手間が掛かります。dictd の設定については、*Note Setup
DICT:: を参照して下さい。

ndic エージェントであれば設定は最小限で済みますが、ndic は最初にインデッ
クスを全て読み込むため、比較的多くのメモリを必要とすることに注意して下さ
い。少なくとも利用するインデックスファイルよりも十分大きなメモリの余裕の
あることが必要です。

ndic エージェントを用いる場合、インデックスファイルと本文ファイルの両方
をそろえて、適当なディレクトリに置いて下さい。本文ファイルは `dictd' 配
布物に含まれる `dictzip' コマンドで圧縮しておいても構いません。これは次
のように実行します。

     % dictzip file.dict


--------- Footnotes ---------

(1)  `http://www.dict.org'


File: lookup.info, Node: Setup cookie, Next: Setup CD-ROM, Prev: Setup dictd, Up: Dictionary Types

cookie ファイル
===============

"cookie ファイル" とは、`fortune' プログラムなどで用いられるfortune
cookie (1) を集めたファイルです。Lookup では ndcookie エージェントにより
利用することが出来ます。(*Note ndcookie::)


cookie ファイルの特徴
---------------------

   * `fortune' プログラムなどで利用されている。
   * 検索には向いていない。いずれかの文をランダムに取り出すのが普通。


cookie ファイルの概要
---------------------

cookie ファイルは `.lines' を拡張子とする単一のファイルからなり、次のよ
うな内容になっています。

     Cookie file example
     ^@
     This is first sentence.^@
     This is second sentence.^@

ここで `^@' とあるのは ASCII コード 0 の文字です。ファイルの先頭から最初
の `^@' までがコメントとなり、続く行から次の `^@' までが一つの cookie と
なっています。


cookie ファイルの利用
---------------------

ファイルを適当なディレクトリに用意し、ndcookie の設定を行なって下さい。


--------- Footnotes ---------

(1)  短かいジョークや格言などを集めたもので、UNIX
では伝統的にログイン時にこれをランダムで表示するようになっている。


File: lookup.info, Node: Setup CD-ROM, Next: Setup NDTP, Prev: Setup cookie, Up: Dictionary Types

各種 CD-ROM 辞書
================

日本で市販されている

電子ブック・EPWING 規約

[ この章はまだ整備途中です ]




File: lookup.info, Node: Setup NDTP, Next: Setup DICT, Prev: Setup CD-ROM, Up: Dictionary Types

NDTP 辞書サーバ
===============

"NDTP" とは、ネットワークで CD-ROM 辞書を共有するために作られた検索用プ
ロトコルです。Lookup では ndtp エージェントにより NDTP サーバとやりとり
することが出来ます。(*Note ndtp::)


NDTP の特徴
-----------

   * 日本の市販 CD-ROM 辞書に根差した内容。
   * 良くも悪くも、いいかげんな設計。
   * 何度か拡張され、今では外字情報も扱えるようになっている。


NDTP の概要
-----------

NDTP (Network Dictionary Transport Protocol) は dserver (1) という検索ソ
フトウェアの中で独自に定義されたもので、簡潔なコマンド体系を持つテキスト
ベースのプロトコルです。次のような応答になります。

        % telnet localhost ndtp
        Trying 127.0.0.1...
        Connected to localhost.
        Escape character is '^]'.
     C> Akei
     S> $A
     C> t
     S> 1       国語辞典        KOKUGO  0       0       900
     S> 2       英和辞典        EIWA    0       0       900
     S> 3       和英辞典        WAEI    0       0       900
     S> $*
     C> L1
     S> $*
     C> Patest
     S> $0
     S> テスト
     S> 668c:73e
     S> $$
     C> S668c:73e
     S> $1
     S> テスト
     S> [名] 1. 試験....
     S> $$
     C> Q
        Connection closed by foreign host.
        % 


NDTP サーバの設定
-----------------

[ この節はまだ整備途中です ]


--------- Footnotes ---------

(1)  ftp://ftp.pu-toyama.ac.jp/pub/misc/


File: lookup.info, Node: Setup DICT, Prev: Setup NDTP, Up: Dictionary Types

DICT 辞書サーバ
===============

"DICT" とは、RFC 2229 として定義されている辞書検索用プロトコルです。
Lookup では ndict エージェントにより DICT サーバとやりとりすることが出来
ます。(*Note ndict::)


DICT の特徴
-----------

   * RFC として明確に定義。
   * 文字コードは UTF-8(Unicode)。


DICT の概要
-----------

        % telnet localhost dict
        Trying 127.0.0.1...
        Connected to localhost.
        Escape character is '^]'.
     S> 220 localhost dictd 1.4.8/rf <auth.mime> <27831.860032493@localhost>
     C> CLIENT ndict
     S> 250 ok
     C> SHOW DB
     S> 110 3 databases present
     S> jargon "Jargon File (4.0.0/24 July 1996)"
     S> foldoc "The Free On-line Dictionary of Computing (15Feb98)"
     S> vera "Virtual Entity of Relevant Acronyms (1.4a)"
     S> .
     S> 250 ok
     C> MATCH * exact "test"
     S> 152 1 matches found
     S> jargon "test"
     S> .
     S> 250 ok [d/m/c = 0/1/27; 0.000r 0.000u 0.000s]
     C> DEFINE jargon "test"
     S> 150 1 definitions retrieved
     S> 151 "test" jargon "Jargon File (4.0.0/24 July 1996)"
     S> test /n./  1. Real users bashing on a prototype long enough to
     S>    get thoroughly acquainted with it, with careful monitoring and
     S>    followup of the results.  2. Some bored random user trying a couple
     S>    of the simpler features with a developer looking over his or her
     S>    shoulder, ready to pounce on mistakes.  Judging by the quality of
     S>    most software, the second definition is far more prevalent.  See
     S>    also {demo}.
     S>
     S>
     S> .
     S> 250 ok [d/m/c = 1/0/11; 0.033r 0.000u 0.009s]
     C> QUIT
     S> 221 bye [d/m/c = 0/0/0; 179.328r 0.000u 0.011s]
        Connection closed by foreign host.
        % 


DICT サーバの設定
-----------------

[ この節はまだ整備途中です ]



File: lookup.info, Node: Search Agents, Next: Mode Details, Prev: Dictionary Types, Up: Top

検索エージェント一覧
********************

この章では、Lookup で利用できる検索エージェントについて、それを利用する
ために行なわなければならない準備や設定項目について詳細に説明します。

* Menu:

* ndic::                        フリー辞書から検索する
* ndeb::                        CD-ROM 辞書から検索する
* ndtp::                        NDTP サーバから検索する
* ndict::                       DICT サーバから検索する
* ndsrd::                       ランダムハウス英語辞典Windows版を検索する
* ndkks::                       日本語の読みを調べる
* ndspell::                     スペルチェックとスペル検索
* ndcookie::                    cookie ファイルから検索する



File: lookup.info, Node: ndic, Next: ndeb, Prev: Search Agents, Up: Search Agents

ndic
====

`ndic' は、主にフリーに配布されている辞書から、手軽に検索を行なうことを
目的とした検索エージェントです。辞書以外に他に用意すべきものもないので、
とりあえず Lookup を試してみるにはちょうどいいでしょう。

dictd 辞書は ndict エージェントでも利用可能です。性能を重視する場合には、
そちらを参照してみて下さい。(*Note ndict::)


* Menu:

* ndic prepare::                ndic の準備
* ndic setup::                  ndic の設定
* ndic dictionary::             ndic の辞書
* ndic customize::              ndic のカスタマイズ



File: lookup.info, Node: ndic prepare, Next: ndic setup, Prev: ndic, Up: ndic

ndic の準備
-----------

ndic では現在、dictd-1.4.x 用に用意された辞書 と SDIC 辞書から検索を行な
うことが可能となっています。いくつかのフリーな辞書が、Lookup のホームペー
ジから入手出来ます。

Lookup dictionary collection
     `http://openlab.ring.gr.jp/lookup/dicts/'

dictd 辞書(`*.index' と `*.dict')やSDIC 辞書(`*.sdic') は適当なディレク
トリにインストールして下さい。dictd 辞書は 圧縮(dictzip)しておいても構い
ません。必要な準備はこれだけです。



File: lookup.info, Node: ndic setup, Next: ndic dictionary, Prev: ndic prepare, Up: ndic

ndic の設定
-----------

ndic は次のように設定します。

     (ndic DIRECTORY)

DIRECTORY には辞書のあるディレクトリを指定します。オプションその他の特別
な設定はありません。

例えば次のようになります。

     (setq lookup-search-agents
           '((ndic "/usr/lib/dict")))



File: lookup.info, Node: ndic dictionary, Next: ndic customize, Prev: ndic setup, Up: ndic

ndic の辞書
-----------

指定したディレクトリに含まれる、dictd辞書のインデックスファイル
(`*.index') や SDIC 辞書(`*.sdic')が辞書として認識されます。その拡張子を
取り除いたファイル名が辞書名となります。辞書のタイトルは自動的に認識され
ます。

全文検索を除く、全ての検索方式が有効です。(*Note Search Methods::)



File: lookup.info, Node: ndic customize, Prev: ndic dictionary, Up: ndic

ndic のカスタマイズ
-------------------

辞書が dictzip コマンドにより圧縮してある場合、その展開に dictzip を呼び
出します。変数 `ndic-dictzip-program' により、そのプログラム名を指定しま
す。デフォルトでは "dictzip" になっています。



File: lookup.info, Node: ndeb, Next: ndtp, Prev: ndic, Up: Search Agents

ndeb
====

`ndeb' は、電子ブックや EPWING 規約に準拠した CD-ROM 書籍の個人利用に向
いた検索エージェントです。eblook という外部コマンドを用いることで、特別
な設定の必要なしに手元の CD-ROM 辞書が利用出来ます。

* Menu:

* ndeb prepare::                ndeb の準備
* ndeb setup::                  ndeb の設定
* ndeb dictionary::             ndeb の辞書
* ndeb customize::              ndeb のカスタマイズ



File: lookup.info, Node: ndeb prepare, Next: ndeb setup, Prev: ndeb, Up: ndeb

ndeb の準備
-----------

ndeb は外部コマンドとして eblook を使用します。eblook とは、電子ブックや
EPWING 規約に従った CD-ROM 辞書をアクセスするための簡易検索コマンドです。


ndeb は外部コマンドとして eblook を利用しています。eblook は、電子ブック
や EPWING といった規約に従った CD-ROM 書籍をアクセスするためのツールです。


CD-ROM の準備
.............

利用出来る CD-ROM は、一般の書店で購入することが出来ます。大体、数千円か
ら数万円程度で売っています。これから購入する場合には、それが EPWING とい
う規格に従っていることを確認して下さい。パッケージの裏に EPWING というマー
クが付いているはずです。

CD-ROM は適当なディレクトリにマウントしておいて下さい。ディスクに余裕が
ある場合には、ハードディスクにコピーしておいても構いません。ただし、コピー
が許されるかどうかは著作者に権利があるので、辞書の説明書を注意して読んで
下さい。

辞書は eblook に附属の圧縮コマンドで圧縮しておくことも可能です。大体、
1/2 〜 1/3 のサイズにまで縮小されます。


eblook
......

eblook は次のところから入手可能です。UNIX 版と、MS Windows で利用出来る
ようにしたバイナリの情報が得られます。

eblook
     `http://openlab.ring.gr.jp/lookup/eblook/'

インストールは適当なディレクトリに行なって下さい。


外字表示の準備
..............

Lookup は CD-ROM 書籍に含まれる外字の表示をサポートしています。外字表示
を行なうための設定については、*Note Setup Gaiji:: を参照して下さい。

外字を表示したくない、もしくはそれが不可能な場合には、Appendix と呼ばれ
る外字の置き換えテーブルを利用することで、外字を通常の文字列で置き換える
ことも可能です。市販の辞書に対応したいくつかの Appendix が、EB ライブラ
リの Web ページで公開されています。

Appendix
     `http://www.sra.co.jp/people/m-kasahr/eb/'

あるいは利用する辞書の補助パッケージがある場合には、そこで独自に外字の置
き換えテーブルが用意されている場合があります。目的の補助パッケージがない
か確認してみて下さい。(*Note Setup Package::)



File: lookup.info, Node: ndeb setup, Next: ndeb dictionary, Prev: ndeb prepare, Up: ndeb

ndeb の設定
-----------

ndeb は、次のように設定します。

     (ndeb DIRECTORY)

DIRECTORY には辞書のあるディレクトリを指定します。

次のエージェント・オプションが利用できます。

`:appendix'
     eblook が利用する Appendix のあるディレクトリを指定します(*Note
     (eblook)Appendix::)。省略された場合には、辞書オプション 
     `:gaiji-table' に従って外字が置き換えられます。(*Note Gaiji
     Table::)
`:coding'
     eblook に対する process-coding-system。デフォルトは `euc-jp'。

次の辞書オプションが利用できます。

`:stop-code'
     辞書の出力の終了コード。一部の辞書では、これを設定しないと表示がお
     かしくなることがある。FAQ を参照。

例えば次のようになります。

     (setq lookup-search-agents
           '((ndeb "/cdrom" :appendix "/usr/local/share/eb/appendix")))



File: lookup.info, Node: ndeb dictionary, Next: ndeb customize, Prev: ndeb setup, Up: ndeb

ndeb の辞書
-----------

CD-ROM 書籍に含まれる全ての辞書が有効となります。辞書の名前とタイトルは
eblook から与えられます。

検索方式は「完全一致検索」「前方一致検索」「後方一致検索」です。(*Note
Search Methods::)

ndeb はメニューコマンドに対応しています。(*Note Specify Dictionary::)



File: lookup.info, Node: ndeb customize, Prev: ndeb dictionary, Up: ndeb

ndeb のカスタマイズ
-------------------

変数 `ndeb-program-name' により、eblook のコマンド名を指定します。デフォ
ルトでは "eblook" となっています。

変数 `ndeb-prompt-string' により、eblook のプロンプトを指定します。デフォ
ルトでは "eblook> " となっています。



File: lookup.info, Node: ndtp, Next: ndict, Prev: ndeb, Up: Search Agents

ndtp
====

`ndtp' は、主にローカル・ネットワークで共有された CD-ROM 辞書から検索を
行なうことを目的とした検索エージェントです。NDTP(Network Dictionary
Transport Protocol)のバージョン 2 に対応したクライアントとなっています。

辞書を共有する必要のない場合には、より手軽に設定できるエージェントとして
ndeb が利用可能です。(*Note ndeb::)

* Menu:

* ndtp prepare::                ndtp の準備
* ndtp setup::                  ndtp の設定
* ndtp dictionary::             ndtp の辞書



File: lookup.info, Node: ndtp prepare, Next: ndtp setup, Prev: ndtp, Up: ndtp

ndtp の準備
-----------

ndtp を利用するには NDTP サーバが必要です。自分のネットワークにサーバが
用意されてない場合には、自分で準備する必要があります。


NDTP server
...........

NDTP サーバとして、dserver と NDTPD の二つが入手可能です。どちらも電子ブッ
クや EPWING に準拠した CD-ROM 書籍を扱うためのサーバです。

`dserver' は、以前から使われている辞書サーバで、NDTP の元となったプログ
ラムです。次のところから入手可能です。

dserver
     `ftp://ftp.pu-toyama.ac.jp/pub/misc/'

`NDTPD' は、新しく作られている辞書サーバで、dserver を置き換えられるよう
開発されています。次のところから入手可能です。

NDTPD
     `http://www.sra.co.jp/people/m-kasahr/ndtpd/'

サーバの設定については、それぞれのプログラムに附属のドキュメントを参照し
て下さい。


外字表示の準備
..............

NDTP サーバとして NDTPD バージョン 2.0 以降を用いると、辞書の外字情報を
扱えるようになります。外字表示のための設定については、*Note Setup
Gaiji::を参照して下さい。



File: lookup.info, Node: ndtp setup, Next: ndtp dictionary, Prev: ndtp prepare, Up: ndtp

ndtp の設定
-----------

ndtp は、次のように設定します。

     (ndtp SERVER)

SERVER には NDTP サーバのホスト名を指定します。

次のエージェント・オプションが利用できます。

`:service'
     NDTP のサービス名。
`:port'
     NDTP のポート番号。サービス名とポート番号の両方を省略した場合は、サー
     ビス名として "ndtp" が利用されます。
`:account'
     サーバへのアカウント。これはログに残るという以上の意味はない。デフォ
     ルトは "<user>@<host>")。
`:coding'
     サーバに対する process-coding-system。デフォルトは `euc-jp'。

例えば次のようになります。

     (setq lookup-search-agents
           '((ndtp "dserver" :port 2010 :account "kei@bamboo")))



File: lookup.info, Node: ndtp dictionary, Prev: ndtp setup, Up: ndtp

ndtp の辞書
-----------

サーバが扱っている全ての辞書が有効となります。辞書の名前とタイトルはサー
バから与えられます。

検索方式は「完全一致検索」「前方一致検索」「後方一致検索」です。(*Note
Search Methods::)



File: lookup.info, Node: ndict, Next: ndsrd, Prev: ndtp, Up: Search Agents

ndict
=====

`ndict' は、主にインターネットで公開されている辞書サーバから検索を行なう
ことを目的とした検索エージェントです。これは DICT プロトコル(RFC 2229)に
対応したクライアントとなっています。

DICT サーバの一つである dictd 向けにフリーに配布されている辞書は、ndic 
エージェントで検索することも可能です。手軽に検索を試してみたい方は、そち
らも参照してみて下さい。(*Note ndic::)

* Menu:

* ndict prepare::               ndict の準備
* ndict setup::                 ndict の設定
* ndict dictionary::            ndict の辞書



File: lookup.info, Node: ndict prepare, Next: ndict setup, Prev: ndict, Up: ndict

ndict の準備
------------

ndict は DICT プロトコルに対応した辞書サーバにアクセスします。サーバに接
続できる環境であれば、特別な準備は何も必要ありません。自分でサーバを導入
する場合には、DICT プロジェクトから dictd が入手可能です。

DICT project
     `http://www.dict.org'

附属のドキュメントに従って適切に辞書、及びサーバを導入して下さい。dictd 
で利用できるいくつかの辞書は、上記ページ以外にも Lookup のホームページか
らも入手可能です。

Lookup dictionary collection
     `http://openlab.ring.gr.jp/lookup/dicts/'



File: lookup.info, Node: ndict setup, Next: ndict dictionary, Prev: ndict prepare, Up: ndict

ndict の設定
------------

ndict は、次のように設定します。

     (ndict SERVER)

SERVER には DICT サーバのホスト名を指定します。

次のエージェント・オプションが利用できます。

`:service'
     DICT のサービス名。
`:port'
     DICT のポート番号。サービス名とポート番号の両方を省略した場合は、サー
     ビス名として変数 `ndict-service-name' の値("dict")が利用されます。
`:coding'
     サーバに対する process-coding-system。デフォルトは `euc-jp-dos'。
`:auth'
     サーバへの authentication(認証)を指定する。ユーザ名とパスワードの組
     (cons)によって表わす。
`:methods'
     サーバが対応している検索方式のリストを指定する。デフォルトでは、サー
     バのソフトウェアを見て検索方式を予測している。というのも、DICT プロ
     トコルでは検索方式はサーバが自由に設けることが出来るので、プログラ
     ムからは完全な自動判定が出来ない。従ってユーザが対応を指定する必要
     がある。dictd-1.4.x を普通に用いる場合には、これを指定する必要はな
     い。次の `:method-table' も参照。
`:method-table'
     Lookup の検索方式とサーバの strategy との対応関係を alist で指定す
     る。例えばサーバが dictd-1.4.x である場合、これは自動的に

          ((keyword . "exact") (prefix . "prefix") (suffix . "suffix")
           (substring . "substring") (exact . "exact") (regexp . "re"))

     のように設定される。上の `:methods' も同時に指定する必要がある。

例えば次のようになります。

     (setq lookup-search-agents
           '((ndict "dict.org" :auth ("kei" . "password"))))



File: lookup.info, Node: ndict dictionary, Prev: ndict setup, Up: ndict

ndict の辞書
------------

サーバが扱っている全ての辞書が有効となります。辞書の名前とタイトルはサー
バから与えられます。(しかし、サーバから与えられるタイトルはかなり長い場
合があるので、自分で再設定した方がよいかもしれません(*Note Dictionary
Options::))

検索方式は相手のサーバに依存します。サーバが dictd-1.4.x をそのまま用い
ている場合には、「全文検索」以外の全ての検索が有効となります。でなければ、
「キーワード検索」と「前方一致検索」のみ有効となります。(*Note Search
Methods::)



File: lookup.info, Node: ndsrd, Next: ndkks, Prev: ndict, Up: Search Agents

ndsrd
=====

`ndsrd' は、ランダムハウス英語辞典Windows版を検索する検索エージェントで
す。外部コマンドとして太田純さん作の CSRD を用います。

* Menu:

* ndsrd prepare::               ndsrd の準備
* ndsrd setup::                 ndsrd の設定
* ndsrd dictionary::            ndsrd の辞書
* ndsrd customize::             ndsrd のカスタマイズ



File: lookup.info, Node: ndsrd prepare, Next: ndsrd setup, Prev: ndsrd, Up: ndsrd

ndsrd の準備
------------

ndsrd はバージョン 1.0 以降の CSRD に対応しています。CSRD は次のサイトか
ら入手出来ます。

CSRD
     `http://openlab.ring.gr.jp/edict/csrd/'

CSRDは附属のドキュメントに従ってインストールを行なってください。



File: lookup.info, Node: ndsrd setup, Next: ndsrd dictionary, Prev: ndsrd prepare, Up: ndsrd

ndsrd の設定
------------

ndsrd は、次のように設定します。

     (ndsrd DIRECTORY
     	       :fmt "/somewhere/csrd.fmt"
     	       :gai "/somewhere/csrd.gai")


File: lookup.info, Node: ndsrd dictionary, Next: ndsrd customize, Prev: ndsrd setup, Up: ndsrd

ndsrd の辞書
------------

ランダムハウス英語辞典Windows版の辞書データです。



File: lookup.info, Node: ndsrd customize, Prev: ndsrd dictionary, Up: ndsrd

ndsrd のカスタマイズ
--------------------

変数 `ndsrd-program-name' により、CSRD のコマンド名を指定します。デフォ
ルトでは "csrd" となっています。



File: lookup.info, Node: ndkks, Next: ndspell, Prev: ndsrd, Up: Search Agents

ndkks
=====

`ndkks' は、検索ではなく日本語の読みを調べるための検索エージェントです。
漢字の含まれる検索語を指定した場合、漢字かな変換プログラム KAKASI を用い
てその読みを調べて表示します。

* Menu:

* ndkks prepare::               ndkks の準備
* ndkks setup::                 ndkks の設定
* ndkks dictionary::            ndkks の辞書
* ndkks customize::             ndkks のカスタマイズ



File: lookup.info, Node: ndkks prepare, Next: ndkks setup, Prev: ndkks, Up: ndkks

ndkks の準備
------------

KAKASI は漢字かな変換プログラムで、次のところから kakasi-2.2.5.tar.gz(本
体ファイル)と kakasidict.940620.gz(辞書ファイル)の名称で入手可能です。

KAKASI
     `ftp://sunsite.sut.ac.jp/pub/asia-info/japanese-src/packages/'

新しくインストールする場合には、更に次のところから得られる情報を元にパッ
チを当てておいた方がいいでしょう。

KAKASI patch
     `http://www.kusastro.kyoto-u.ac.jp/~baba/wais/index.html'



File: lookup.info, Node: ndkks setup, Next: ndkks dictionary, Prev: ndkks prepare, Up: ndkks

ndkks の設定
------------

ndkks は、次のように設定します。

     (ndkks)

つまり、それを `lookup-search-agents' のリストに加えるだけです。オプショ
ンその他の特別な設定はありません。



File: lookup.info, Node: ndkks dictionary, Next: ndkks customize, Prev: ndkks setup, Up: ndkks

ndkks の辞書
------------

ndkks 自体が一つの辞書となります。辞書名は変数 `ndkks-program-name' で指
定される KAKASI プログラムの名前です。タイトルは変数
`ndkks-dictionary-title' により与えられます。

キーワード検索において、漢字の含まれる検索語が指定されたとき出力されます。



File: lookup.info, Node: ndkks customize, Prev: ndkks dictionary, Up: ndkks

ndkks のカスタマイズ
--------------------

変数 `ndkks-program-name' により、KAKASI のコマンド名を指定します。デフォ
ルトでは "kakasi" となっています。

変数 `ndkks-dictionary-title' により、ndkks 辞書のタイトルを指定します。
デフォルトでは "漢字かな辞典" となっています。

変数 `ndkks-content-format' により、出力内容のフォーマットをリストで指定
します。リストの各要素には次のものが利用できます。

`t'
     検索語が挿入される。
文字列
     それがそのまま挿入される。
文字列のリスト
     それをオプション引数として KAKASI を呼び出し、その結果が挿入される。



File: lookup.info, Node: ndspell, Next: ndcookie, Prev: ndkks, Up: Search Agents

ndspell
=======

`ndspell' は、Lookup でスペルチェックを行なうための検索エージェントです。
他のエージェントで独自にスペルチェックを行なわずとも、ndspell がそれを処
理して自動的に再検索を行なってくれます。また、スペルの検索も行なえます。

* Menu:

* ndspell prepare::             ndspell の準備
* ndspell setup::               ndspell の設定
* ndspell dictionary::          ndspell の辞書
* ndspell customize::           ndspell のカスタマイズ



File: lookup.info, Node: ndspell prepare, Next: ndspell setup, Prev: ndspell, Up: ndspell

ndspell の準備
--------------

ndspell は外部コマンドとして Ispell と grep を利用しています。Ispell は
対話型のスペルチェックコマンドで、grep は言わずと知れた UNIX ツールです。
どちらも GNU の FTP サイトなどから入手可能です。

GNU ftp directory
     `ftp://ftp.gnu.org/pub/GNU/'



File: lookup.info, Node: ndspell setup, Next: ndspell dictionary, Prev: ndspell prepare, Up: ndspell

ndspell の設定
--------------

ndspell は、次のように設定します。

     (ndspell)

つまり、それを `lookup-search-agents' のリストに加えるだけです。オプショ
ンその他の特別な設定はありません。



File: lookup.info, Node: ndspell dictionary, Next: ndspell customize, Prev: ndspell setup, Up: ndspell

ndspell の辞書
--------------

ndspell 自体が一つの辞書となります。辞書名は変数`ndspell-ispell-program' 
で指定される Ispell コマンドの名前です。タイトルは変数 
`ndspell-dictionary-title' により与えられます。

次の検索法が有効となります。

`キーワード検索'
     検索語をスペルチェックし、誤りがある場合には候補をエントリとして生
     成。
`前方一致検索'
`後方一致検索'
`部分一致検索'
`正規表現検索'
     パターンにマッチする単語を検索し、エントリを生成。

どの場合も、生成されたエントリは普通に Entry バッファに出力され、それを
選択して内容を表示しようとした段階で再検索が行なわれます。実際に試してみ
て下さい。



File: lookup.info, Node: ndspell customize, Prev: ndspell dictionary, Up: ndspell

ndspell のカスタマイズ
----------------------

変数 `ndspell-ispell-program' により、Ispell のコマンド名を指定します。
デフォルトでは "ispell" となっています。

変数 `ndspell-grep-program' により、grep のコマンド名を指定します。デフォ
ルトでは "grep" となっています。

変数 `ndspell-words-dictionary' により、スペルを検索する際の単語辞書を指
定します。デフォルトでは `/usr/share/dict/words' となっています。

変数 `ndspell-dictionary-title' により、ndspell 辞書のタイトルを指定しま
す。デフォルトでは "Spell Checker" となっています。

変数 `ndspell-search-dictionaries' により、再検索の対象とする辞書をその
辞書ID のリストとして指定します。デフォルトでは `t' となっており、この場
合、選択されている全ての辞書から再検索が行なわれます。



File: lookup.info, Node: ndcookie, Prev: ndspell, Up: Search Agents

ndcookie
========

`ndcookie' は、cookie ファイル(引用集)から検索を行なうための検索エージェ
ントです。おまけみたいなもんです。

* Menu:

* ndcookie prepare::            ndcookie の準備
* ndcookie setup::              ndcookie の設定
* ndcookie dictionary::         ndcookie の辞書



File: lookup.info, Node: ndcookie prepare, Next: ndcookie setup, Prev: ndcookie, Up: ndcookie

ndcookie の準備
---------------

利用出来るファイルの例としては、Emacs に附属の Zippy ファイルがあります。

Zippy
     `$(EMACS)/etc/yow.lines'



File: lookup.info, Node: ndcookie setup, Next: ndcookie dictionary, Prev: ndcookie prepare, Up: ndcookie

ndcookie の設定
---------------

ndcookie は、次のように設定します。

     (ndcookie FILE)

FILE には、利用する cookie ファイルを指定します。ファイルが相対パスで指
定された場合、変数 `data-directory' からの相対パスとして扱われます。

例えば次のようになります。

     (setq lookup-search-agents
           '((ndcookie "yow.lines")))



File: lookup.info, Node: ndcookie dictionary, Prev: ndcookie setup, Up: ndcookie

ndcookie の辞書
---------------

指定した cookie ファイルが一つの辞書となります。辞書名はファイル名に一致
します。タイトルは設定されません。

全ての検索方式が有効となります。(*Note Search Methods::)



File: lookup.info, Node: Mode Details, Next: How To Get, Prev: Search Agents, Up: Top

各モードについての詳細
**********************

この章では、Lookup の各モードでの全ての設定・操作について説明します。

* Menu:

* Select Mode::                 Select モード
* Entry Mode::                  Entry モード
* Content Mode::                Content モード



File: lookup.info, Node: Select Mode, Next: Entry Mode, Prev: Mode Details, Up: Mode Details

Select モード
=============

Select モードでは、利用可能な辞書の一覧を表示し、実際に利用する辞書の選
択状態を切り替えることが出来ます。また、それぞれの辞書に固有の情報を得る
ことも出来ます。

* Menu:

* Select Mode Details::         Select モードの詳細
* Select Mode Commands::        Select モードのコマンド一覧



File: lookup.info, Node: Select Mode Details, Next: Select Mode Commands, Prev: Select Mode, Up: Select Mode

Select モードの詳細
-------------------

最初に `M-x lookup' を実行するか、検索実行後に Entry バッファで `S' を押
すと、辞書一覧バッファが表示され、Select モード(`lookup-select-mode')に
入ります。キーマップは`lookup-select-mode-map' で、最初に 
`lookup-select-mode-hook' が呼ばれます。

一覧の `%'、`Identifier'、`Title' とあるコラムには、それぞれ辞書の選択状
態、辞書ID、辞書のタイトルが表示されます。*Note Quick Startup:: を参照し
て下さい。

`Methods' とあるコラムには、辞書が対応している検索方式が示されます。ここ
に並んでいる記号の列は、一文字がそれぞれ一つの検索方式を表わしています。
各記号と検索方式の対応については、*Note Search Methods:: を参照して下さ
い。

このバッファでの具体的な操作については、*Note Specify Dictionary:: を参
照して下さい。



File: lookup.info, Node: Select Mode Commands, Prev: Select Mode Details, Up: Select Mode

Select モードのコマンド一覧
---------------------------

`SPC'
`n'
`M-x lookup-select-next-line'
     次の行に進む。

`p'
`M-x lookup-select-previous-line'
     前の行に戻る。

`m'
`M-x lookup-select-do-select'
     ポイント行の辞書を選択する。

`u'
`M-x lookup-select-do-unselect'
     ポイント行の辞書を非選択にする。

`M-x lookup-select-toggle-selected'
     ポイント行の辞書の選択状態をトグルする。

`a'
`M-x lookup-select-do-select-all'
     全ての辞書を選択する。

`RET'
`M-x lookup-select-do-select-only'
     ポイント行の辞書のみを選択する。

`d'
`M-x lookup-select-mark-disable'
     ポイント行の辞書に無効化のマークを付ける。

`x'
`M-x lookup-select-do-execute'
     無効化を実行する。

`M'
`M-x lookup-select-menu'
     辞書がメニューに対応している場合、それを参照する。

`f'
`M-x lookup-select-search-pattern'
     選択された辞書から検索を行なう。

`/'
`M-x lookup-select-text-search'
     ポイント行の辞書から全文検索を行なう。

`g'
`M-x lookup-select-update'
     現在の検索モジュールを初期化し直す。ただし、設定ファイルで設定を変
     更した場合、それを反映させるには`M-x lookup-restart' を用いる必要が
     ある。

`q'
`M-x lookup-quit'
     辞書選択バッファを抜ける。

`Q'
`M-x lookup-exit'
     Lookup を終了する。

`R'
`M-x lookup-restart'
     Lookup を再起動する。

`?'
`M-x lookup-select-help'
     Select モードの簡易ヘルプを表示する。



File: lookup.info, Node: Entry Mode, Next: Content Mode, Prev: Select Mode, Up: Mode Details

Entry モード
============

Entry モードでは、検索の結果見付かったエントリを一覧し、それらを順に参照
していくことが出来ます。

* Menu:

* Entry Mode Details::          Entry モードの詳細
* Entry Mode Commands::         Entry モードのコマンド一覧



File: lookup.info, Node: Entry Mode Details, Next: Entry Mode Commands, Prev: Entry Mode, Up: Entry Mode

Entry モードの詳細
------------------

各種の検索コマンド(*Note Search Commands::)を実行すると、Entry バッファ
が表示され、Entry モード(`lookup-entry-mode')に入ります。キーマップは 
`lookup-entry-mode-map' で、最初に `lookup-entry-mode-hook' が呼ばれます。

バッファにはエントリの一覧が表示され、辞書のタイトルとエントリの見出しが
並びます。モードラインは次のようになります。

     ----------------------------------------------------------------
     -E:%*  Lookup: *Entry* {*:word} [2]      (Entry Abbrev)--L1--C20
     ----------------------------------------------------------------

ここでブレース(大括弧)に挟まれた部分は、どのような検索が行なわれたかを示
しています。コロン(`:')の前の一文字は検索方式を表わしており、その後の 
`word' となっているのが検索語です。検索方式については*Note Search
Methods:: を参照して下さい。後に続くブラケット(角括弧)と数字は、見付かっ
たエントリの数です。

このバッファでの具体的な操作については、*Note See Result:: 参照して下さ
い。



File: lookup.info, Node: Entry Mode Commands, Prev: Entry Mode Details, Up: Entry Mode

Entry モードのコマンド一覧
--------------------------

`M-x lookup-entry-display-content'
     ポイント行のエントリの本文を表示する。Overview モードになっている場
     合にはそれを解除し、Content バッファをオープンする。エントリがリファ
     レンスの場合には、それを参照する。

`mouse-2'
``lookup-entry-mouse-follow''
     マウスでクリックしたエントリの本文を表示する。

`SPC'
`M-x lookup-entry-next-page'
     エントリ本文の表示を一ページ進める。バッファの終わりまで達したら、
     次のエントリに移動する。

`DEL'
`M-x lookup-entry-previous-page'
     エントリ本文の表示を一ページ戻す。バッファの始めまで達したら、前の
     エントリに移動する。

`RET'
`M-x lookup-entry-scroll-up-content'
     エントリ本文をプレフィスクの行数だけスクロール・アップする。

`M-x lookup-entry-scroll-down-content'
     エントリ本文をプレフィスクの行数だけスクロール・ダウンする。

`<'
`M-x lookup-entry-beginning-of-content'
     エントリ本文の表示を先頭まで戻す。

`>'
`M-x lookup-entry-end-of-content'
     エントリ本文の表示を末尾まで進める。

`n'
`M-x lookup-entry-next-entry'
     次のエントリを表示する。プレフィクスの数だけ進む。

`p'
`M-x lookup-entry-previous-entry'
     前のエントリを表示する。プレフィクスの数だけ戻る。

`M-n'
`M-x lookup-entry-history-next'
     検索履歴を次に進む。プレフィスクの数だけ進む。

`M-p'
`M-x lookup-entry-history-previous'
     検索履歴を前に戻る。プレフィスクの数だけ戻る。

`i'
`M-x lookup-entry-info'
     エントリの情報を出力する。

`o'
`M-x lookup-entry-open'
     エントリ本文を画面一杯に表示する。

`O'
`M-x lookup-entry-open-other'
     エントリ本文を別プログラムで表示する。

`v'
`M-x lookup-entry-overview-mode'
     Overview モードに入る。Cotent バッファがクローズされ、`n' と `p' が
     単にポイント移動だけを行なうようになる。

`t'
`M-x lookup-entry-toggle-format'
     エントリ本文の整形処理をトグルする。

`s'
`M-x lookup-entry-isearch-content'
     Content バッファで isearch-forward を実行する。

`w'
`M-x lookup-entry-cite-content'
     エントリ本文をキルリングに保存する。変数 `lookup-cite-style' もしく
     は辞書オプション `:cite-style' により引用のスタイルを指定可能。`M-x
     lookup-content-cite-region' も参照。

`f'
`M-x lookup-entry-search-pattern'
     ミニバッファから検索式を入力して検索する。

`L'
`M-x lookup-entry-list-references'
     エントリ本文に含まれるリファレンスを一覧する。

`S'
`M-x lookup-select-dictionary'
     辞書選択バッファに切り換える。

`r'
`M-x lookup-entry-start-window'
     検索を開始したウィンドウに移動する。

`h'
`M-x lookup-entry-content-window'
     Content バッファに移動する。

`g'
`M-x lookup-entry-update'
     今回と同じ検索語で、エントリを再検索する。

`M-x lookup-entry-update-content'
     エントリ本文を再表示する。整形処理も全てやり直される。

`q'
`M-x lookup-quit'
     Entry バッファを抜ける。

`Q'
`M-x lookup-exit'
     Lookup を終了する。

`R'
`M-x lookup-restart'
     Lookup を再起動する。

`?'
`M-x lookup-entry-help'
     Entry モードの簡易ヘルプを表示する。



File: lookup.info, Node: Content Mode, Prev: Entry Mode, Up: Mode Details

Content モード
==============

Content モードでは、エントリの本文を表示し、内容を参照することが出来ます。

* Menu:

* Content Mode Details::        Content モードの詳細
* Content Mode Commands::       Content モードのコマンド一覧



File: lookup.info, Node: Content Mode Details, Next: Content Mode Commands, Prev: Content Mode, Up: Content Mode

Content モードの詳細
--------------------

Entry バッファで本文を表示するよう操作すると Content バッファが現れ、
Content モード(`lookup-content-mode')に入ります。キーマップは
`lookup-content-mode-map' で、最初に `lookup-content-mode-hook' が呼ばれ
ます。

バッファにはエントリの本文が表示され、見出しがモードラインに示されます。

このバッファに対する主な操作は Entry バッファから行なうことが出来るので、
直接このモードを利用することはあまりありません。具体的な操作については、
*Note See Result:: 参照して下さい。



File: lookup.info, Node: Content Mode Commands, Prev: Content Mode Details, Up: Content Mode

Content モードのコマンド一覧
----------------------------

`SPC'
`M-x scroll-up'
     バッファをスクロール・アップする。

`DEL'
`M-x scroll-down'
     バッファをスクロール・ダウンする。

`<'
`M-x beginning-of-buffer'
     バッファの先頭に移動する。

`>'
`M-x end-of-buffer'
     バッファの末尾に移動する。

`TAB'
`M-x lookup-content-next-link'
     次のリンクに移動する。

`RET'
`M-x lookup-content-follow-link'
     ポイント位置のリンクを参照する。

`mouse-2'
``lookup-content-mouse-follow''
     マウスでクリックしたリンクを参照する。

`t'
`M-x lookup-content-toggle-format'
     本文の整形処理をトグルする。

`w'
`M-x lookup-content-cite-region'
     リージョンの内容をキルリングに保存する。その際、変数 
     `lookup-cite-header' または辞書オプション `:cite-header' により引用
     時のヘッダを、変数 `lookup-cite-prefix' または辞書オプション
     `:cite-prefix' により引用時のプレフィクスを指定することが出来る。 
     (1)

`h'
`M-x lookup-content-entry-window'
     Entry バッファに移動する。

`g'
`M-x lookup-content-update'
     キャッシュを用いずに本文を読み直す。

`q'
`M-x lookup-content-leave'
     Content バッファを抜ける。

`?'
`M-x lookup-content-help'
     Content モードの簡易ヘルプを表示する。


--------- Footnotes ---------

(1)  現在、`:cite-style' には未対応


File: lookup.info, Node: How To Get, Next: Troubleshooting, Prev: Mode Details, Up: Top

最新情報を手に入れる
********************

Lookup は Ring Server のオープンラボで開発されています。次のところから入
手可能です。

Lookup
     `http://openlab.ring.gr.jp/lookup/'

Lookup に関する情報交換は、専用のメーリングリストにて行われています。参
加を希望する方は、lookup-ja-request@ring.gr.jp 宛てに、本文にsubscribe 
と書いたメールを送って下さい。

Lookup は、lookup-ja@ring.gr.jp メイリングリストの有志 
(lookup-ja@ring.gr.jp)が管理しています。Lookup に関する問い合わせはこち
らまでお願いします。



File: lookup.info, Node: Troubleshooting, Next: Glossary, Prev: How To Get, Up: Top

トラブルシューティング
**********************

いくつかのトラブルへの対処法が、Lookup 配布物に含まれるファイル FAQ にま
とめてあるので、そちらを参照して下さい。それでも不明な場合は、メーリング
リストなどで質問して下さい。



File: lookup.info, Node: Glossary, Next: Concept Index, Prev: Troubleshooting, Up: Top

用語集
******

辞書 (dictionary)
     検索の元となる情報源。Lookup では CD-ROM 書籍や辞書サーバなどが使え
     る。

CD-ROM 書籍 (CD-ROM book)
     電子ブック(EB/EBG/EBXA) や EPWING 規約に準拠した電子書籍。

辞書サーバ (dictionary server)
     NDTP や DICT プロトコルなどに対応した、用語検索の機能を提供するサー
     バ。

NDTP (Network Dictionary Transport Protocol)
     CD-ROM 書籍をネットワークで利用するためのプロトコル。dserver という
     ソフトウェアが独自に定義したもの。

DICT プロトコル
     ネットワークで検索を行なうためのプロトコル。RFC 2229。

検索エージェント (search agent)
     辞書を実際にアクセスするための内部プログラム。

検索モジュール (search module)
     一回の検索の対象となる辞書のまとまり。

検索 (search)
     Lookup では、辞書から目的のエントリを調べ出すこと。メニューから目的
     のエントリまでを順に辿っていく「メニュー検索」や、検索語を指定して
     エントリを見付け出す「文字列検索」がある。

メニュー検索 (menu)
     辞書にあらかじめ用意されたメニューを辿って、目的のエントリを見付け
     出すこと。

文字列検索 (search string)
     検索語を用いた検索。ミニバッファから検索式を入力する場合を特に「パ
     ターン検索」と呼ぶ。リージョンなどを指定した場合には「単語検索」が
     行なわれる。

パターン検索 (search pattern)
     ミニバッファから検索式を入力して行なう検索のこと。パターンの指定方
     法によって、次の「単語検索」「完全一致検索」「前方一致検索」「後方
     一致検索」「中間一致検索」「正規表現検索」「キーワード検索」「全文
     検索」を切り換えることが出来る。

単語検索 (search word)
     デフォルトの検索方法。「完全一致検索」や「キーワード検索」などを間
     接的に呼び出す。

前方一致検索 (search prefix)
     指定した検索語が見出し語の前方と一致するものを検索。

後方一致検索 (search suffix)
     指定した検索語が見出し語の後方と一致するものを検索。

中間一致検索 (search substring)
     指定した検索語が見出し語の一部に含まれるものを検索。

完全一致検索 (search exactly)
     指定した検索語が見出し語と完全に一致するものを検索。

正規表現検索 (search regexp)
     正規表現を検索語として見出し語と一致するものを検索。

キーワード検索 (search keyword)
     辞書に登録されキーワードと一致するエントリを検索。

全文検索 (text search)
     指定した検索語と一致するものを辞書の全文から検索。

エントリ (entry)
     辞書で説明されている一つ一つの項目のこと。

見出し (heading)
     エントリの内容を示す表題。

見出し語 (headword)
     エントリの検索用の語句。

キーワード (keyword)
     エントリに関連付けられた追加の語句。

本文 (contents)
     エントリの説明内容。

リファレンス (reference)
     一つのエントリから関連付けられた別のエントリ。

リンク (link)
     リファレンスを呼び出すために設けられた文字領域。

grep
     ファイルから特定の文字列やパターンを含む行を抜き出す UNIX のツール。



File: lookup.info, Node: Concept Index, Next: Command Index, Prev: Glossary, Up: Top

Concept Index
*************

* Menu:

* adjust:                       Format Contents.        5.
* arrange:                      Format Contents.        5.
* 外字テーブル:                 Gaiji Table.            8.
* 完全一致検索:                 Search Methods.         22.
* 正規表現検索:                 Search Methods.         62.
* 後方一致検索:                 Search Methods.         36.
* エージェントID:               Quick Startup.          46.
* 検索エージェント:             Quick Setup.            5.
* 前方一致検索:                 Search Methods.         29.
* 全文検索:                     Search Methods.         79.
* 単語検索:                     Default Method.         5.
* 電子ブック:                   Setup CD-ROM.           5.
* 部分一致検索:                 Search Methods.         43.
* 補助パッケージ:               Setup Package.          5.
* 補助パッケージ:               Supplement Package.     4.
* リファレンス:                 Search Methods.         87.
* キーワード検索:               Search Methods.         70.
* 辞書一覧バッファ:             Quick Startup.          37.
* 辞書ID:                       Quick Startup.          46.
* パッケージ・ディレクトリ:     Setup Package.          17.
* パッケージ名:                 Setup Package.          17.
* 辞書名:                       Quick Startup.          46.
* パターン検索:                 Search Methods.         5.
* オプション:                   Setup Option.           11.
* Content バッファ:             Quick Search.           38.
* cookie ファイル:              Setup cookie.           5.
* DICT プロトコル:              Setup DICT.             5.
* dictd フォーマット:           Setup dictd.            5.
* Entry バッファ:               Quick Search.           33.
* EPWING 規約:                  Setup CD-ROM.           5.
* NDTP:                         Setup NDTP.             5.
* Overview モード:              Quick View.             36.
* SDIC フォーマット:            Setup SDIC.             5.



File: lookup.info, Node: Command Index, Next: Variable Index, Prev: Concept Index, Up: Top

Command Index
*************

* Menu:

* lookup:                       Startup Commands.       5.
* lookup-content-cite-region:   Content Mode Commands.  57.
* lookup-content-entry-window:  Content Mode Commands.  67.
* lookup-content-follow-link:   Content Mode Commands.  39.
* lookup-content-help:          Content Mode Commands.  85.
* lookup-content-leave:         Content Mode Commands.  79.
* lookup-content-mode:          Content Mode Details.   5.
* lookup-content-mouse-follow:  Content Mode Commands.  45.
* lookup-content-next-link:     Content Mode Commands.  33.
* lookup-content-toggle-format: Content Mode Commands.  51.
* lookup-content-update:        Content Mode Commands.  73.
* lookup-entry-beginning-of-content: Entry Mode Commands.  45.
* lookup-entry-cite-content:    Entry Mode Commands.    118.
* lookup-entry-content-window:  Entry Mode Commands.    150.
* lookup-entry-display-content: Entry Mode Commands.    7.
* lookup-entry-end-of-content:  Entry Mode Commands.    51.
* lookup-entry-help:            Entry Mode Commands.    184.
* lookup-entry-history-next:    Entry Mode Commands.    69.
* lookup-entry-history-previous: Entry Mode Commands.   75.
* lookup-entry-info:            Entry Mode Commands.    81.
* lookup-entry-isearch-content: Entry Mode Commands.    112.
* lookup-entry-list-references: Entry Mode Commands.    132.
* lookup-entry-mode:            Entry Mode Details.     5.
* lookup-entry-mouse-follow:    Entry Mode Commands.    15.
* lookup-entry-next-entry:      Entry Mode Commands.    57.
* lookup-entry-next-page:       Entry Mode Commands.    21.
* lookup-entry-open:            Entry Mode Commands.    87.
* lookup-entry-open-other:      Entry Mode Commands.    93.
* lookup-entry-overview-mode:   Entry Mode Commands.    99.
* lookup-entry-previous-entry:  Entry Mode Commands.    63.
* lookup-entry-previous-page:   Entry Mode Commands.    28.
* lookup-entry-scroll-down-content: Entry Mode Commands.  39.
* lookup-entry-scroll-up-content: Entry Mode Commands.  35.
* lookup-entry-search-pattern:  Entry Mode Commands.    126.
* lookup-entry-start-window:    Entry Mode Commands.    144.
* lookup-entry-toggle-format:   Entry Mode Commands.    106.
* lookup-entry-update:          Entry Mode Commands.    156.
* lookup-entry-update-content:  Entry Mode Commands.    160.
* lookup-new-gaiji-table:       Gaiji Table.            8.
* lookup-pattern:               Search Commands.        9.
* lookup-pattern-full-screen:   Search Commands.        75.
* lookup-pattern-other-frame:   Search Commands.        75.
* lookup-region:                Search Commands.        21.
* lookup-region-full-screen:    Search Commands.        75.
* lookup-region-other-frame:    Search Commands.        75.
* lookup-restart:               Startup Commands.       25.
* lookup-secondary:             Search Commands.        49.
* lookup-secondary-full-screen: Search Commands.        75.
* lookup-secondary-other-frame: Search Commands.        75.
* lookup-select-do-execute:     Select Mode Commands.   57.
* lookup-select-do-select:      Select Mode Commands.   23.
* lookup-select-do-select-all:  Select Mode Commands.   39.
* lookup-select-do-select-all:  Specify Dictionary.     40.
* lookup-select-do-select-only: Select Mode Commands.   45.
* lookup-select-do-select-only: Specify Dictionary.     40.
* lookup-select-do-unselect:    Select Mode Commands.   29.
* lookup-select-help:           Select Mode Commands.   107.
* lookup-selection:             Search Commands.        29.
* lookup-selection-full-screen: Search Commands.        75.
* lookup-selection-other-frame: Search Commands.        75.
* lookup-select-mark-disable:   Select Mode Commands.   51.
* lookup-select-menu:           Select Mode Commands.   63.
* lookup-select-mode:           Select Mode Details.    5.
* lookup-select-next-line:      Select Mode Commands.   11.
* lookup-select-previous-line:  Select Mode Commands.   17.
* lookup-select-search-pattern: Select Mode Commands.   69.
* lookup-select-text-search:    Select Mode Commands.   75.
* lookup-select-toggle-selected: Select Mode Commands.  33.
* lookup-select-update:         Select Mode Commands.   81.
* lookup-set-agent-option:      Setup Option.           61.
* lookup-set-dictionary-option: Setup Option.           31.
* lookup-suspend:               Startup Commands.       14.
* lookup-use-package:           Setup Package.          32.
* lookup-word:                  Search Commands.        25.
* lookup-word-full-screen:      Search Commands.        75.
* lookup-word-other-frame:      Search Commands.        75.



