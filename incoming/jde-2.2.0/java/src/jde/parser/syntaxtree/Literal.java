//
// Generated by JTB 1.2.1
//

package jde.parser.syntaxtree;

/**
 * Grammar production:
 * <PRE>
 * nodeChoice -> &lt;INTEGER_LITERAL&gt;
 *       | &lt;FLOATING_POINT_LITERAL&gt;
 *       | &lt;CHARACTER_LITERAL&gt;
 *       | &lt;STRING_LITERAL&gt;
 *       | BooleanLiteral()
 *       | NullLiteral()
 * </PRE>
 */
public class Literal implements Node {
   private Node parent;
   public NodeChoice nodeChoice;

   public Literal(NodeChoice n0) {
      nodeChoice = n0;
      if ( nodeChoice != null ) nodeChoice.setParent(this);
   }

   public void accept(jde.parser.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(jde.parser.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
   public void setParent(Node n) { parent = n; }
   public Node getParent()       { return parent; }
}

